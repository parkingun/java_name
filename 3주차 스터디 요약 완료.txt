3주차 (~218)

접근 제어자 
public: 외부 클래스에서 접근이 가능하여 사용할 수 있음
private 외부 클래스에서 사용할 수 없음
 * private로 선언된 변수에 접근하기 위해서는 get(), set() 메서드를 사용

자신의 메모리를 가리키는 this(예약어)
생성자에서 다른 생성자를 호출하는 this
자신의 주소를 반환하는 this

static 변수(= 정적 변수, 클래스 변수)
 - 클래스 내부에 선언
 - 프로그램이 실행되어 메모리에 올라갔을 때 딱 한 번 메모리 공간이 할당됨.
 - 생성된 값은 모든 인스턴스가 공유
 - 클래스를 선언할 대 특정 메모리에 저장되어 모든 인스턴스가 공유하는 변수
 - 인스턴스마다 생성되는 벼수가 아닌 클래스에 속해 한번만 생성되는 변수 > 여러 인스턴스가 공유
 
* 변수 용도
 - 지역 변수 
  1) 선언 위치: 함수 내부에 선언
  2) 사용 범위: 함수 내부에서만 사용
  3) 메모리: 스택
  4) 생성과 소멸: 함수가 호출될 때 생성, 함수가 종료되면 소멸
  
 - 멤버 변수
  1) 선언 위치: 클래스 멤버 변수로 선언
  2) 사용 범위: 클래스 내부에 사용, private이 아니면 참조 변수로 다른 클래스에서 사용 가능
  3) 메모리: 힙
  4) 생성과 소멸: 인스턴스가 생성될 때 힙에 생성, 가비지 컬렉터가 메모리르 수거할 때 소멸
  
 - Static 변수
  1) 선언 위치: static 예약어를 사용하여 클래스 내부에 선언
  2) 사용 범위: 클래스 내부에 사용, private이 아니면 클래스 이름으로 다른 클래스에서 사용 가능
  3) 메모리: 데이터 영역
  4) 생성과 소멸: 프로그램이 처음 시작할 때 상수와 함게 데이터 영역에 생성, 프로그램이 종료되고 메모리를 해체할 때 소멸

배열 선언
 자료형[] 배열이름 = new 자료형[개수];  ex) int[] studentID = new int[10];
 자료형 배열이름[] = new 자료형[개수];  ex) int studentID[] = new int[10];

배열 초기화
ex 1) int[] studentID = new int[] {101,102,103};
ex 2) int[] studentID = {101,102,103};

객체 배열 사용하기
ex) Book 클래스를 만들고 이 클래스로 객체 배열을 만들어 본다면,
Book[] library = new Book[5];

이차원 배열
int[][] arr = new int[2][3]; //자료형[][] 배열이름 = new 자료형[행개수][열개수];
